<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Is Configuration Manager Dead</title><link>http://example.org/</link><description>Recent content on Is Configuration Manager Dead</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 26 Aug 2021 22:33:12 -0400</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Brad Anderson 2019-10-04</title><link>http://example.org/posts/enternallifemem/</link><pubDate>Thu, 26 Aug 2021 22:33:12 -0400</pubDate><guid>http://example.org/posts/enternallifemem/</guid><description>i’ve been asked a couple times today if Microsoft Endpoint Manager means the death of #ConfigMgr —
honestly, the truth is really simple: MEM means ConfigMgr has eternal life!#MSIgnite pic.twitter.com/AeMp5eGxa7
&amp;mdash; Brad Anderson (@Anderson) November 4, 2019</description></item><item><title>Brad Anderson 2020-03-03</title><link>http://example.org/posts/futureofmem/</link><pubDate>Thu, 26 Aug 2021 22:33:12 -0400</pubDate><guid>http://example.org/posts/futureofmem/</guid><description>This video is something I’ve asked everyone in my org to watch. It was intended to be internal-only, but I can’t resist sharing it.
You can read more about why I think this is so important here: https://t.co/3jvzumi8EA pic.twitter.com/dd5IuoxcNt
&amp;mdash; Brad Anderson (@Anderson) March 3, 2020</description></item><item><title>My First Post</title><link>http://example.org/posts/my-first-post/</link><pubDate>Thu, 26 Aug 2021 22:33:12 -0400</pubDate><guid>http://example.org/posts/my-first-post/</guid><description>Asking the Right Question – With PowerShell PowerShell has a couple of different ways to query an API. However before we can even get started with querying the API we need to build our bearer token which will authenticate us to ASK questions. Fortunately this is pretty well documented on the Microsoft Website.
$tenantId = &amp;#39;&amp;#39; ### Paste your tenant ID here $appId = &amp;#39;&amp;#39; ### Paste your Application ID here $appSecret = &amp;#39;&amp;#39; ### Paste your Application secret here #NOTE: Build the auth response token to the Windows Security Center API (Basically establishing a logged in session) $resourceAppIdUri = &amp;#39;https://api.</description></item></channel></rss>